--- ./linenoise.h	2016-03-12 08:16:01.081122582 -0800
+++ ./linenoise.h	2016-03-12 08:16:58.045513140 -0800
@@ -49,7 +49,9 @@
 } linenoiseCompletions;
 
 typedef void(linenoiseCompletionCallback)(const char *, linenoiseCompletions *);
+typedef void(linenoiseHelpCallback)(const char *);
 void linenoiseSetCompletionCallback(linenoiseCompletionCallback *);
+void linenoiseSetHelpCallback(linenoiseHelpCallback *);
 void linenoiseAddCompletion(linenoiseCompletions *, const char *);
 
 char *linenoise(const char *prompt);
--- ./linenoise.c	2015-07-13 07:04:24.000000000 -0700
+++ ./linenoise.c	2016-03-12 09:10:54.595721595 -0800
@@ -122,6 +122,7 @@
 #define LINENOISE_MAX_LINE 4096
 static char *unsupported_term[] = {"dumb","cons25","emacs",NULL};
 static linenoiseCompletionCallback *completionCallback = NULL;
+static linenoiseHelpCallback *helpCallback = NULL;
 
 static struct termios orig_termios; /* In order to restore at exit.*/
 static int rawmode = 0; /* For atexit() function to check if restore is needed*/
@@ -409,6 +410,11 @@
     completionCallback = fn;
 }
 
+/* Register a callback function to be called for ? help-completion. */
+void linenoiseSetHelpCallback(linenoiseHelpCallback *fn) {
+    helpCallback = fn;
+}
+
 /* This function is used by the callback function registered by the user
  * in order to add completion options given the input string when the
  * user typed <tab>. See the example.c source code for a very easy to
@@ -715,6 +721,22 @@
     refreshLine(l);
 }
 
+static void getHelp(struct linenoiseState *ls) {
+    char seq[64];
+    int fd = ls->ofd;
+    struct abuf ab;
+
+    abInit(&ab);
+    /* Cursor to left edge */
+    snprintf(seq,64,"\r");
+    abAppend(&ab,seq,strlen(seq));
+    if (write(fd,ab.b,ab.len) == -1) {} /* Can't recover from write error. */
+    abFree(&ab);
+
+    helpCallback(ls->buf);
+    refreshLine(ls);
+}
+
 /* This function is the core of the line editing capability of linenoise.
  * It expects 'fd' to be already in "raw mode" so that every key pressed
  * will be returned ASAP to read().
@@ -769,6 +791,12 @@
             if (c == 0) continue;
         }
 
+        /* ? Help results */      
+        if (c == 63 && helpCallback != NULL) {
+          getHelp(&l);
+          continue;
+        }
+
         switch(c) {
         case ENTER:    /* enter */
             history_len--;
